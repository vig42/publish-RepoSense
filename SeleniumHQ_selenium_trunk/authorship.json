[{"path":"java/server/src/org/openqa/selenium/grid/commands/config.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"Selenium can be configured in a number of ways:"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":" * On the command line, using flags."},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Via config files in JSON or TOML format."},{"lineNumber":5,"author":{"gitId":"-"},"content":" * Using system properties"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Using environment variables"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"When starting selenium, configuration options are prioritised from"},{"lineNumber":9,"author":{"gitId":"-"},"content":"most important to least important:"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":" 1. Environment variables"},{"lineNumber":12,"author":{"gitId":"-"},"content":" 2. System properties"},{"lineNumber":13,"author":{"gitId":"-"},"content":" 3. Command line"},{"lineNumber":14,"author":{"gitId":"-"},"content":" 4. Config files"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"The reason for the ordering is to allow selenium to be configured"},{"lineNumber":17,"author":{"gitId":"-"},"content":"easily within containers or in kubernetes."},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"Additional Config Options"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"In addition, Selenium will use Java\u0027s `ServiceLocator` to find"},{"lineNumber":23,"author":{"gitId":"-"},"content":"instances of `org.openqa.selenium.grid.HasRoles` to find new command"},{"lineNumber":24,"author":{"gitId":"-"},"content":"line flags. These should annotate options using JCommander\u0027s"},{"lineNumber":25,"author":{"gitId":"-"},"content":"`@Parameter` in order to be picked up. In order for this functionality"},{"lineNumber":26,"author":{"gitId":"-"},"content":"to work, the classes must also be present on the classpath. This can"},{"lineNumber":27,"author":{"gitId":"-"},"content":"either done by modifying the classpath itself, or by using the `--ext`"},{"lineNumber":28,"author":{"gitId":"-"},"content":"flag:"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"`java -jar selenium.jar --ext $ADDITIONAL_CLASSPATH standalone`"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"Config Option Structure"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"The best mental model to use when thinking about Selenium"},{"lineNumber":36,"author":{"gitId":"-"},"content":"configurations is to imagine an \"INI\" file. The configuration is split"},{"lineNumber":37,"author":{"gitId":"-"},"content":"into sections, and within each section there are are options, which"},{"lineNumber":38,"author":{"gitId":"-"},"content":"have a value. For this reason, config files may be specified using"},{"lineNumber":39,"author":{"gitId":"-"},"content":"TOML files:"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"`java -jar selenium.jar standalone --config myconfig.toml`"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"Where `myconfig.toml` may look like:"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"```"},{"lineNumber":46,"author":{"gitId":"-"},"content":"[server]"},{"lineNumber":47,"author":{"gitId":"-"},"content":"# Start on a different port than normal"},{"lineNumber":48,"author":{"gitId":"-"},"content":"port \u003d 4445"},{"lineNumber":49,"author":{"gitId":"-"},"content":"host \u003d \"localhost\""},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"[node]"},{"lineNumber":52,"author":{"gitId":"Diego Molina"},"content":"max-sessions \u003d 12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"More Information"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"Use the `--config-help` flag to have the selenium server output the"},{"lineNumber":59,"author":{"gitId":"-"},"content":"list of configuration options that can be included in a config file,"},{"lineNumber":60,"author":{"gitId":"-"},"content":"and what they do. Examples are included in each entry:"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"`java -jar selenium.jar standalone --config-help`"}],"authorContributionMap":{"Diego Molina":1,"-":61}},{"path":"java/server/src/org/openqa/selenium/grid/commands/tracing.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"Selenium Grid ships with support for distributed tracing, backed by"},{"lineNumber":2,"author":{"gitId":"-"},"content":"the OpenTelemetry APIs. This allows admins and devops engineers to"},{"lineNumber":3,"author":{"gitId":"-"},"content":"trace the flow of control through the Grid for each and every command."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"To enable this support, you must first provide a \"Tracer\""},{"lineNumber":6,"author":{"gitId":"-"},"content":"implementation that should be used. We use OpenTelemtry\u0027s own"},{"lineNumber":7,"author":{"gitId":"-"},"content":"mechanisms for selecting the implementations, so if your chosen"},{"lineNumber":8,"author":{"gitId":"-"},"content":"tracing library supports this you should be good to go. If you are"},{"lineNumber":9,"author":{"gitId":"-"},"content":"using the standalone selenium jar, updating the classpath to contain"},{"lineNumber":10,"author":{"gitId":"-"},"content":"your tracer can be done using the `--ext` flag to selenium."},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"As a worked example, using Jaeger as the tracing library and running"},{"lineNumber":13,"author":{"gitId":"-"},"content":"on macOS or Linux:"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"```"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  java -jar selenium.jar \\"},{"lineNumber":17,"author":{"gitId":"-"},"content":"       --ext $(coursier fetch -p \\"},{"lineNumber":18,"author":{"gitId":"Puja Jagani"},"content":"          io.opentelemetry:opentelemetry-exporter-jaeger:1.0.0 \\"},{"lineNumber":19,"author":{"gitId":"Puja Jagani"},"content":"          io.grpc:grpc-netty:1.35.0) \\"},{"lineNumber":20,"author":{"gitId":"-"},"content":"       standalone"},{"lineNumber":21,"author":{"gitId":"-"},"content":"```"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"This example uses a tool called \"coursier\" to generate a full"},{"lineNumber":24,"author":{"gitId":"-"},"content":"classpath, but you can also write this manually. When started this"},{"lineNumber":25,"author":{"gitId":"-"},"content":"way, the selenium server will inform you that it has found a tracer on"},{"lineNumber":26,"author":{"gitId":"-"},"content":"stdout."},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"However, just making the tracer available is seldom enough. You must"},{"lineNumber":29,"author":{"gitId":"-"},"content":"also configure it to send diagnostics back. In the case of Jaeger,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"this can be done via system properties. Modifying our example:"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"```"},{"lineNumber":33,"author":{"gitId":"Simon Stewart"},"content":"  java -Dotel.traces.exporter\u003djaeger \\"},{"lineNumber":34,"author":{"gitId":"Simon Stewart"},"content":"       -Dotel.exporter.jaeger.endpoint\u003dlocalhost:14250 \\"},{"lineNumber":35,"author":{"gitId":"Simon Stewart"},"content":"       -Dotel.resource.attributes\u003dservice.name\u003dselenium-standalone \\"},{"lineNumber":36,"author":{"gitId":"-"},"content":"       -jar selenium.jar \\"},{"lineNumber":37,"author":{"gitId":"-"},"content":"       --ext $(coursier fetch -p \\"},{"lineNumber":38,"author":{"gitId":"Puja Jagani"},"content":"          io.opentelemetry:opentelemetry-exporter-jaeger:1.0.0 \\"},{"lineNumber":39,"author":{"gitId":"Puja Jagani"},"content":"          io.grpc:grpc-netty:1.35.0) \\"},{"lineNumber":40,"author":{"gitId":"-"},"content":"       standalone"},{"lineNumber":41,"author":{"gitId":"-"},"content":"```"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"You will also need to be running a tracing server somewhere. In the"},{"lineNumber":44,"author":{"gitId":"-"},"content":"case of Jaeger, you can do this using docker to fire up something"},{"lineNumber":45,"author":{"gitId":"-"},"content":"locally:"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"```"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  docker run --rm -it --name jaeger \\"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    -p 16686:16686 \\"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    -p 14250:14250 \\"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    jaegertracing/all-in-one:1.19.2"},{"lineNumber":52,"author":{"gitId":"-"},"content":"```"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"Now run some tests, and then point a browser at"},{"lineNumber":55,"author":{"gitId":"-"},"content":"http://localhost:16686/ to view the outputs."},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"There are other popular tracing libraries that are supported by"},{"lineNumber":58,"author":{"gitId":"-"},"content":"OpenTelemetry, so please check their documentation for more"},{"lineNumber":59,"author":{"gitId":"-"},"content":"information on how to configure them."},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"More information can be found at:"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"* OpenTelemetry: https://opentelemetry.io"},{"lineNumber":64,"author":{"gitId":"Simon Stewart"},"content":"* Configuring OpenTelemetry:"},{"lineNumber":65,"author":{"gitId":"Simon Stewart"},"content":"    https://github.com/open-telemetry/opentelemetry-java/tree/main/sdk-extensions/autoconfigure"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Jaeger: https://www.jaegertracing.io"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* Coursier: https://get-coursier.io"}],"authorContributionMap":{"Simon Stewart":5,"Puja Jagani":4,"-":58}},{"path":"py/requirements.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"attrs"},{"lineNumber":2,"author":{"gitId":"David Burns"},"content":"certifi"},{"lineNumber":3,"author":{"gitId":"-"},"content":"dataclasses"},{"lineNumber":4,"author":{"gitId":"David Burns"},"content":"debugpy"},{"lineNumber":5,"author":{"gitId":"-"},"content":"h11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"idna"},{"lineNumber":7,"author":{"gitId":"David Burns"},"content":"importlib_metadata"},{"lineNumber":8,"author":{"gitId":"-"},"content":"inflection"},{"lineNumber":9,"author":{"gitId":"-"},"content":"iniconfig"},{"lineNumber":10,"author":{"gitId":"-"},"content":"more_itertools"},{"lineNumber":11,"author":{"gitId":"-"},"content":"multidict"},{"lineNumber":12,"author":{"gitId":"-"},"content":"outcome"},{"lineNumber":13,"author":{"gitId":"-"},"content":"pluggy"},{"lineNumber":14,"author":{"gitId":"-"},"content":"py"},{"lineNumber":15,"author":{"gitId":"David Burns"},"content":"pytest~\u003d6.1"},{"lineNumber":16,"author":{"gitId":"David Burns"},"content":"pytest-instafail~\u003d0.4"},{"lineNumber":17,"author":{"gitId":"David Burns"},"content":"pytest-mock~\u003d3.3"},{"lineNumber":18,"author":{"gitId":"David Burns"},"content":"pytest-trio~\u003d0.7"},{"lineNumber":19,"author":{"gitId":"-"},"content":"sortedcontainers"},{"lineNumber":20,"author":{"gitId":"-"},"content":"sniffio"},{"lineNumber":21,"author":{"gitId":"David Burns"},"content":"trio~\u003d0.17"},{"lineNumber":22,"author":{"gitId":"David Burns"},"content":"trio_websocket~\u003d0.9"},{"lineNumber":23,"author":{"gitId":"David Burns"},"content":"urllib3~\u003d1.26"},{"lineNumber":24,"author":{"gitId":"David Burns"},"content":"zipp"}],"authorContributionMap":{"-":13,"David Burns":11}},{"path":"py/test/selenium/webdriver/common/test_file.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"David Burns"},"content":"lorem ipsum dolor sit amet"}],"authorContributionMap":{"David Burns":1}},{"path":"py/test/selenium/webdriver/common/test_file2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"David Burns"},"content":"lorem ipsum dolor sit amet"}],"authorContributionMap":{"David Burns":1}}]
